/**
 * Autogenerated by Avro
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package works.hop.model.avro;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@org.apache.avro.specific.AvroGenerated
public class AScrum extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AScrum\",\"namespace\":\"works.hop.model.avro\",\"fields\":[{\"name\":\"resourceId\",\"type\":\"string\",\"required\":\"true\"},{\"name\":\"organizer\",\"type\":\"string\",\"required\":\"true\"},{\"name\":\"title\",\"type\":[\"null\",\"string\"]},{\"name\":\"task\",\"type\":\"string\",\"default\":\"unspecified\"},{\"name\":\"locked\",\"type\":\"boolean\",\"default\":false},{\"name\":\"players\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"record\",\"name\":\"APlayer\",\"fields\":[{\"name\":\"email\",\"type\":\"string\",\"required\":\"true\"},{\"name\":\"name\",\"type\":\"string\",\"required\":\"true\"}]}]}},{\"name\":\"choices\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"votes\",\"type\":{\"type\":\"map\",\"values\":\"string\"}}]}");
    private static final long serialVersionUID = 8629486095444791761L;
    private static SpecificData MODEL$ = new SpecificData();
    private static final BinaryMessageEncoder<AScrum> ENCODER =
            new BinaryMessageEncoder<AScrum>(MODEL$, SCHEMA$);
    private static final BinaryMessageDecoder<AScrum> DECODER =
            new BinaryMessageDecoder<AScrum>(MODEL$, SCHEMA$);
    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumWriter<AScrum>
            WRITER$ = (org.apache.avro.io.DatumWriter<AScrum>) MODEL$.createDatumWriter(SCHEMA$);
    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumReader<AScrum>
            READER$ = (org.apache.avro.io.DatumReader<AScrum>) MODEL$.createDatumReader(SCHEMA$);
    @Deprecated
    public java.lang.CharSequence resourceId;
    @Deprecated
    public java.lang.CharSequence organizer;
    @Deprecated
    public java.lang.CharSequence title;
    @Deprecated
    public java.lang.CharSequence task;
    @Deprecated
    public boolean locked;
    @Deprecated
    public java.util.List<java.lang.Object> players;
    @Deprecated
    public java.util.List<java.lang.CharSequence> choices;
    @Deprecated
    public java.util.Map<java.lang.CharSequence, java.lang.CharSequence> votes;
    /**
     * Default constructor.  Note that this does not initialize fields
     * to their default values from the schema.  If that is desired then
     * one should use <code>newBuilder()</code>.
     */
    public AScrum() {
    }
    /**
     * All-args constructor.
     * @param resourceId The new value for resourceId
     * @param organizer The new value for organizer
     * @param title The new value for title
     * @param task The new value for task
     * @param locked The new value for locked
     * @param players The new value for players
     * @param choices The new value for choices
     * @param votes The new value for votes
     */
    public AScrum(java.lang.CharSequence resourceId, java.lang.CharSequence organizer, java.lang.CharSequence title, java.lang.CharSequence task, java.lang.Boolean locked, java.util.List<java.lang.Object> players, java.util.List<java.lang.CharSequence> choices, java.util.Map<java.lang.CharSequence, java.lang.CharSequence> votes) {
        this.resourceId = resourceId;
        this.organizer = organizer;
        this.title = title;
        this.task = task;
        this.locked = locked;
        this.players = players;
        this.choices = choices;
        this.votes = votes;
    }

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    /**
     * Return the BinaryMessageEncoder instance used by this class.
     * @return the message encoder used by this class
     */
    public static BinaryMessageEncoder<AScrum> getEncoder() {
        return ENCODER;
    }

    /**
     * Return the BinaryMessageDecoder instance used by this class.
     * @return the message decoder used by this class
     */
    public static BinaryMessageDecoder<AScrum> getDecoder() {
        return DECODER;
    }

    /**
     * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
     * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
     * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
     */
    public static BinaryMessageDecoder<AScrum> createDecoder(SchemaStore resolver) {
        return new BinaryMessageDecoder<AScrum>(MODEL$, SCHEMA$, resolver);
    }

    /**
     * Deserializes a AScrum from a ByteBuffer.
     * @param b a byte buffer holding serialized data for an instance of this class
     * @return a AScrum instance decoded from the given buffer
     * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
     */
    public static AScrum fromByteBuffer(
            java.nio.ByteBuffer b) throws java.io.IOException {
        return DECODER.decode(b);
    }

    /**
     * Creates a new AScrum RecordBuilder.
     * @return A new AScrum RecordBuilder
     */
    public static works.hop.model.avro.AScrum.Builder newBuilder() {
        return new works.hop.model.avro.AScrum.Builder();
    }

    /**
     * Creates a new AScrum RecordBuilder by copying an existing Builder.
     * @param other The existing builder to copy.
     * @return A new AScrum RecordBuilder
     */
    public static works.hop.model.avro.AScrum.Builder newBuilder(works.hop.model.avro.AScrum.Builder other) {
        if (other == null) {
            return new works.hop.model.avro.AScrum.Builder();
        } else {
            return new works.hop.model.avro.AScrum.Builder(other);
        }
    }

    /**
     * Creates a new AScrum RecordBuilder by copying an existing AScrum instance.
     * @param other The existing instance to copy.
     * @return A new AScrum RecordBuilder
     */
    public static works.hop.model.avro.AScrum.Builder newBuilder(works.hop.model.avro.AScrum other) {
        if (other == null) {
            return new works.hop.model.avro.AScrum.Builder();
        } else {
            return new works.hop.model.avro.AScrum.Builder(other);
        }
    }

    /**
     * Serializes this AScrum to a ByteBuffer.
     * @return a buffer holding the serialized data for this instance
     * @throws java.io.IOException if this instance could not be serialized
     */
    public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
        return ENCODER.encode(this);
    }

    public org.apache.avro.specific.SpecificData getSpecificData() {
        return MODEL$;
    }

    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return resourceId;
            case 1:
                return organizer;
            case 2:
                return title;
            case 3:
                return task;
            case 4:
                return locked;
            case 5:
                return players;
            case 6:
                return choices;
            case 7:
                return votes;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader.  Applications should not call.
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                resourceId = (java.lang.CharSequence) value$;
                break;
            case 1:
                organizer = (java.lang.CharSequence) value$;
                break;
            case 2:
                title = (java.lang.CharSequence) value$;
                break;
            case 3:
                task = (java.lang.CharSequence) value$;
                break;
            case 4:
                locked = (java.lang.Boolean) value$;
                break;
            case 5:
                players = (java.util.List<java.lang.Object>) value$;
                break;
            case 6:
                choices = (java.util.List<java.lang.CharSequence>) value$;
                break;
            case 7:
                votes = (java.util.Map<java.lang.CharSequence, java.lang.CharSequence>) value$;
                break;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /**
     * Gets the value of the 'resourceId' field.
     * @return The value of the 'resourceId' field.
     */
    public java.lang.CharSequence getResourceId() {
        return resourceId;
    }

    /**
     * Sets the value of the 'resourceId' field.
     * @param value the value to set.
     */
    public void setResourceId(java.lang.CharSequence value) {
        this.resourceId = value;
    }

    /**
     * Gets the value of the 'organizer' field.
     * @return The value of the 'organizer' field.
     */
    public java.lang.CharSequence getOrganizer() {
        return organizer;
    }

    /**
     * Sets the value of the 'organizer' field.
     * @param value the value to set.
     */
    public void setOrganizer(java.lang.CharSequence value) {
        this.organizer = value;
    }

    /**
     * Gets the value of the 'title' field.
     * @return The value of the 'title' field.
     */
    public java.lang.CharSequence getTitle() {
        return title;
    }

    /**
     * Sets the value of the 'title' field.
     * @param value the value to set.
     */
    public void setTitle(java.lang.CharSequence value) {
        this.title = value;
    }

    /**
     * Gets the value of the 'task' field.
     * @return The value of the 'task' field.
     */
    public java.lang.CharSequence getTask() {
        return task;
    }

    /**
     * Sets the value of the 'task' field.
     * @param value the value to set.
     */
    public void setTask(java.lang.CharSequence value) {
        this.task = value;
    }

    /**
     * Gets the value of the 'locked' field.
     * @return The value of the 'locked' field.
     */
    public boolean getLocked() {
        return locked;
    }

    /**
     * Sets the value of the 'locked' field.
     * @param value the value to set.
     */
    public void setLocked(boolean value) {
        this.locked = value;
    }

    /**
     * Gets the value of the 'players' field.
     * @return The value of the 'players' field.
     */
    public java.util.List<java.lang.Object> getPlayers() {
        return players;
    }

    /**
     * Sets the value of the 'players' field.
     * @param value the value to set.
     */
    public void setPlayers(java.util.List<java.lang.Object> value) {
        this.players = value;
    }

    /**
     * Gets the value of the 'choices' field.
     * @return The value of the 'choices' field.
     */
    public java.util.List<java.lang.CharSequence> getChoices() {
        return choices;
    }

    /**
     * Sets the value of the 'choices' field.
     * @param value the value to set.
     */
    public void setChoices(java.util.List<java.lang.CharSequence> value) {
        this.choices = value;
    }

    /**
     * Gets the value of the 'votes' field.
     * @return The value of the 'votes' field.
     */
    public java.util.Map<java.lang.CharSequence, java.lang.CharSequence> getVotes() {
        return votes;
    }

    /**
     * Sets the value of the 'votes' field.
     * @param value the value to set.
     */
    public void setVotes(java.util.Map<java.lang.CharSequence, java.lang.CharSequence> value) {
        this.votes = value;
    }

    @Override
    public void writeExternal(java.io.ObjectOutput out)
            throws java.io.IOException {
        WRITER$.write(this, SpecificData.getEncoder(out));
    }

    @Override
    public void readExternal(java.io.ObjectInput in)
            throws java.io.IOException {
        READER$.read(this, SpecificData.getDecoder(in));
    }

    /**
     * RecordBuilder for AScrum instances.
     */
    @org.apache.avro.specific.AvroGenerated
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AScrum>
            implements org.apache.avro.data.RecordBuilder<AScrum> {

        private java.lang.CharSequence resourceId;
        private java.lang.CharSequence organizer;
        private java.lang.CharSequence title;
        private java.lang.CharSequence task;
        private boolean locked;
        private java.util.List<java.lang.Object> players;
        private java.util.List<java.lang.CharSequence> choices;
        private java.util.Map<java.lang.CharSequence, java.lang.CharSequence> votes;

        /** Creates a new Builder */
        private Builder() {
            super(SCHEMA$);
        }

        /**
         * Creates a Builder by copying an existing Builder.
         * @param other The existing Builder to copy.
         */
        private Builder(works.hop.model.avro.AScrum.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.resourceId)) {
                this.resourceId = data().deepCopy(fields()[0].schema(), other.resourceId);
                fieldSetFlags()[0] = other.fieldSetFlags()[0];
            }
            if (isValidValue(fields()[1], other.organizer)) {
                this.organizer = data().deepCopy(fields()[1].schema(), other.organizer);
                fieldSetFlags()[1] = other.fieldSetFlags()[1];
            }
            if (isValidValue(fields()[2], other.title)) {
                this.title = data().deepCopy(fields()[2].schema(), other.title);
                fieldSetFlags()[2] = other.fieldSetFlags()[2];
            }
            if (isValidValue(fields()[3], other.task)) {
                this.task = data().deepCopy(fields()[3].schema(), other.task);
                fieldSetFlags()[3] = other.fieldSetFlags()[3];
            }
            if (isValidValue(fields()[4], other.locked)) {
                this.locked = data().deepCopy(fields()[4].schema(), other.locked);
                fieldSetFlags()[4] = other.fieldSetFlags()[4];
            }
            if (isValidValue(fields()[5], other.players)) {
                this.players = data().deepCopy(fields()[5].schema(), other.players);
                fieldSetFlags()[5] = other.fieldSetFlags()[5];
            }
            if (isValidValue(fields()[6], other.choices)) {
                this.choices = data().deepCopy(fields()[6].schema(), other.choices);
                fieldSetFlags()[6] = other.fieldSetFlags()[6];
            }
            if (isValidValue(fields()[7], other.votes)) {
                this.votes = data().deepCopy(fields()[7].schema(), other.votes);
                fieldSetFlags()[7] = other.fieldSetFlags()[7];
            }
        }

        /**
         * Creates a Builder by copying an existing AScrum instance
         * @param other The existing instance to copy.
         */
        private Builder(works.hop.model.avro.AScrum other) {
            super(SCHEMA$);
            if (isValidValue(fields()[0], other.resourceId)) {
                this.resourceId = data().deepCopy(fields()[0].schema(), other.resourceId);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.organizer)) {
                this.organizer = data().deepCopy(fields()[1].schema(), other.organizer);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.title)) {
                this.title = data().deepCopy(fields()[2].schema(), other.title);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.task)) {
                this.task = data().deepCopy(fields()[3].schema(), other.task);
                fieldSetFlags()[3] = true;
            }
            if (isValidValue(fields()[4], other.locked)) {
                this.locked = data().deepCopy(fields()[4].schema(), other.locked);
                fieldSetFlags()[4] = true;
            }
            if (isValidValue(fields()[5], other.players)) {
                this.players = data().deepCopy(fields()[5].schema(), other.players);
                fieldSetFlags()[5] = true;
            }
            if (isValidValue(fields()[6], other.choices)) {
                this.choices = data().deepCopy(fields()[6].schema(), other.choices);
                fieldSetFlags()[6] = true;
            }
            if (isValidValue(fields()[7], other.votes)) {
                this.votes = data().deepCopy(fields()[7].schema(), other.votes);
                fieldSetFlags()[7] = true;
            }
        }

        /**
         * Gets the value of the 'resourceId' field.
         * @return The value.
         */
        public java.lang.CharSequence getResourceId() {
            return resourceId;
        }


        /**
         * Sets the value of the 'resourceId' field.
         * @param value The value of 'resourceId'.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder setResourceId(java.lang.CharSequence value) {
            validate(fields()[0], value);
            this.resourceId = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'resourceId' field has been set.
         * @return True if the 'resourceId' field has been set, false otherwise.
         */
        public boolean hasResourceId() {
            return fieldSetFlags()[0];
        }


        /**
         * Clears the value of the 'resourceId' field.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder clearResourceId() {
            resourceId = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /**
         * Gets the value of the 'organizer' field.
         * @return The value.
         */
        public java.lang.CharSequence getOrganizer() {
            return organizer;
        }


        /**
         * Sets the value of the 'organizer' field.
         * @param value The value of 'organizer'.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder setOrganizer(java.lang.CharSequence value) {
            validate(fields()[1], value);
            this.organizer = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /**
         * Checks whether the 'organizer' field has been set.
         * @return True if the 'organizer' field has been set, false otherwise.
         */
        public boolean hasOrganizer() {
            return fieldSetFlags()[1];
        }


        /**
         * Clears the value of the 'organizer' field.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder clearOrganizer() {
            organizer = null;
            fieldSetFlags()[1] = false;
            return this;
        }

        /**
         * Gets the value of the 'title' field.
         * @return The value.
         */
        public java.lang.CharSequence getTitle() {
            return title;
        }


        /**
         * Sets the value of the 'title' field.
         * @param value The value of 'title'.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder setTitle(java.lang.CharSequence value) {
            validate(fields()[2], value);
            this.title = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /**
         * Checks whether the 'title' field has been set.
         * @return True if the 'title' field has been set, false otherwise.
         */
        public boolean hasTitle() {
            return fieldSetFlags()[2];
        }


        /**
         * Clears the value of the 'title' field.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder clearTitle() {
            title = null;
            fieldSetFlags()[2] = false;
            return this;
        }

        /**
         * Gets the value of the 'task' field.
         * @return The value.
         */
        public java.lang.CharSequence getTask() {
            return task;
        }


        /**
         * Sets the value of the 'task' field.
         * @param value The value of 'task'.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder setTask(java.lang.CharSequence value) {
            validate(fields()[3], value);
            this.task = value;
            fieldSetFlags()[3] = true;
            return this;
        }

        /**
         * Checks whether the 'task' field has been set.
         * @return True if the 'task' field has been set, false otherwise.
         */
        public boolean hasTask() {
            return fieldSetFlags()[3];
        }


        /**
         * Clears the value of the 'task' field.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder clearTask() {
            task = null;
            fieldSetFlags()[3] = false;
            return this;
        }

        /**
         * Gets the value of the 'locked' field.
         * @return The value.
         */
        public boolean getLocked() {
            return locked;
        }


        /**
         * Sets the value of the 'locked' field.
         * @param value The value of 'locked'.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder setLocked(boolean value) {
            validate(fields()[4], value);
            this.locked = value;
            fieldSetFlags()[4] = true;
            return this;
        }

        /**
         * Checks whether the 'locked' field has been set.
         * @return True if the 'locked' field has been set, false otherwise.
         */
        public boolean hasLocked() {
            return fieldSetFlags()[4];
        }


        /**
         * Clears the value of the 'locked' field.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder clearLocked() {
            fieldSetFlags()[4] = false;
            return this;
        }

        /**
         * Gets the value of the 'players' field.
         * @return The value.
         */
        public java.util.List<java.lang.Object> getPlayers() {
            return players;
        }


        /**
         * Sets the value of the 'players' field.
         * @param value The value of 'players'.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder setPlayers(java.util.List<java.lang.Object> value) {
            validate(fields()[5], value);
            this.players = value;
            fieldSetFlags()[5] = true;
            return this;
        }

        /**
         * Checks whether the 'players' field has been set.
         * @return True if the 'players' field has been set, false otherwise.
         */
        public boolean hasPlayers() {
            return fieldSetFlags()[5];
        }


        /**
         * Clears the value of the 'players' field.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder clearPlayers() {
            players = null;
            fieldSetFlags()[5] = false;
            return this;
        }

        /**
         * Gets the value of the 'choices' field.
         * @return The value.
         */
        public java.util.List<java.lang.CharSequence> getChoices() {
            return choices;
        }


        /**
         * Sets the value of the 'choices' field.
         * @param value The value of 'choices'.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder setChoices(java.util.List<java.lang.CharSequence> value) {
            validate(fields()[6], value);
            this.choices = value;
            fieldSetFlags()[6] = true;
            return this;
        }

        /**
         * Checks whether the 'choices' field has been set.
         * @return True if the 'choices' field has been set, false otherwise.
         */
        public boolean hasChoices() {
            return fieldSetFlags()[6];
        }


        /**
         * Clears the value of the 'choices' field.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder clearChoices() {
            choices = null;
            fieldSetFlags()[6] = false;
            return this;
        }

        /**
         * Gets the value of the 'votes' field.
         * @return The value.
         */
        public java.util.Map<java.lang.CharSequence, java.lang.CharSequence> getVotes() {
            return votes;
        }


        /**
         * Sets the value of the 'votes' field.
         * @param value The value of 'votes'.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder setVotes(java.util.Map<java.lang.CharSequence, java.lang.CharSequence> value) {
            validate(fields()[7], value);
            this.votes = value;
            fieldSetFlags()[7] = true;
            return this;
        }

        /**
         * Checks whether the 'votes' field has been set.
         * @return True if the 'votes' field has been set, false otherwise.
         */
        public boolean hasVotes() {
            return fieldSetFlags()[7];
        }


        /**
         * Clears the value of the 'votes' field.
         * @return This builder.
         */
        public works.hop.model.avro.AScrum.Builder clearVotes() {
            votes = null;
            fieldSetFlags()[7] = false;
            return this;
        }

        @Override
        @SuppressWarnings("unchecked")
        public AScrum build() {
            try {
                AScrum record = new AScrum();
                record.resourceId = fieldSetFlags()[0] ? this.resourceId : (java.lang.CharSequence) defaultValue(fields()[0]);
                record.organizer = fieldSetFlags()[1] ? this.organizer : (java.lang.CharSequence) defaultValue(fields()[1]);
                record.title = fieldSetFlags()[2] ? this.title : (java.lang.CharSequence) defaultValue(fields()[2]);
                record.task = fieldSetFlags()[3] ? this.task : (java.lang.CharSequence) defaultValue(fields()[3]);
                record.locked = fieldSetFlags()[4] ? this.locked : (java.lang.Boolean) defaultValue(fields()[4]);
                record.players = fieldSetFlags()[5] ? this.players : (java.util.List<java.lang.Object>) defaultValue(fields()[5]);
                record.choices = fieldSetFlags()[6] ? this.choices : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[6]);
                record.votes = fieldSetFlags()[7] ? this.votes : (java.util.Map<java.lang.CharSequence, java.lang.CharSequence>) defaultValue(fields()[7]);
                return record;
            } catch (org.apache.avro.AvroMissingFieldException e) {
                throw e;
            } catch (java.lang.Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }

}










